FOR(i, 0, (1 << n) - 1) {
    FOR(j, 1, n) {
        FOR(k, j + 1, n) {
            if ((1 << (j - 1) & i) && (1 << (k - 1) & i)) {
                f[i] += w[j][k];
            }
        }
    }

    for (int j = i; j; j = (j - 1) & i) {
        f[i] = max(f[i], f[i ^ j] + f[j]);
    }
}

为什么这样呢？

假设 i 是一个二进制数，表示一个集合（1表示包含该元素，0表示不包含）

j = 5 (101)  → 子集: {2, 0}
j = (5-1) & 5 = 4 & 5 = 4 (100) → 子集: {2}
j = (4-1) & 5 = 3 & 5 = 1 (001) → 子集: {0}
j = (1-1) & 5 = 0 → 结束
